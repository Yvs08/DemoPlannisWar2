package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    
	@Autowired // This means to get the bean called userRepository // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
        
        @Autowired 
        private PartnersRepository partnersRepository;
	
	//@GetMapping(path="/add") // Map ONLY GET Requests
        @RequestMapping(value = "/add", method = RequestMethod.POST)
	public @ResponseBody User addNewUser (@RequestBody User t) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		String name ;
                String email ;
                String home = t.getHome().getNam();
		name = t.getName();
		email = t.getEmail();
                Home h = new Home(home);
                User n = new User(name,email,h);
                
		userRepository.save(n);
		return t;
	}
        
        //@GetMapping(path="/addParts") // Map ONLY GET Requests
        @RequestMapping(value = "/addParts", method = RequestMethod.POST)
	public @ResponseBody Partners addNewPartners (@RequestBody Partners t ) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		partnersRepository.save(t);
		
		return t;
	}
	
	@GetMapping(path="/allna")
	public @ResponseBody Iterable<User> getAllUsersNantes() {
		// This returns a JSON or XML with the users
		return userRepository.findAllhomeNantes();
	}
        
        @GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAllUsers();
	}
        
        @GetMapping(path="/home")
	public @ResponseBody Iterable<User> getHome(@RequestParam String nam) {
		// This returns a JSON or XML with the users
		return userRepository.findHomeUser(nam);
	}
}
